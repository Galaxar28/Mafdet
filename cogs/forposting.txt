import logging
from unidecode import unidecode
from discord.ext import commands

class memberListener(commands.Cog, command_attrs=dict(hidden=True)):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_member_update(self, before, after):
        logger.info('Member update before: {}'.format(before))
        logger.info('Member update after : {}'.format(after))
        if (before.pending == True):
            if (after.pending == False):
                logger.info('Member now verified: {}'.format(after))
            else:
                logger.info('Still pending: {}'.format(after))
        else:
            logger.info('Some other update.')

    @commands.Cog.listener()
    async def on_member_remove(self,member):
        logger.info('Member left: {}'.format(member))

def setup(bot):
    global logger
    logger = logging.getLogger('discord')
    bot.add_cog(memberListener(bot))
# end of def setup

